<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rex_Surprise</title>
  
  <subtitle>Welcome to rexSurprise!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://atc96.top/"/>
  <updated>2020-05-09T15:40:53.322Z</updated>
  <id>https://atc96.top/</id>
  
  <author>
    <name>Rex_Surprise</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kali安装Docker</title>
    <link href="https://atc96.top/Docker-Install/"/>
    <id>https://atc96.top/Docker-Install/</id>
    <published>2020-05-09T13:55:24.000Z</published>
    <updated>2020-05-09T15:40:53.322Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#kali安装docker">kali安装Docker</a><ul><li><a href="#1-安装docker">1. 安装Docker</a></li><li><a href="#2-使用ustc的docker镜像">2. 使用ustc的docker镜像</a></li><li><a href="#4-docker容器管理相关命令">4. docker容器管理相关命令</a></li></ul></li></ul><!-- tocstop --><a id="more"></a><h1><span id="kali安装docker">kali安装Docker</span></h1><h2><span id="1-安装docker">1. 安装Docker</span></h2><ul><li><p>最好先配置一下国内的源</p></li><li><pre><code class="bash">vim /etc/apt/sources.list<span class="comment"># 版本不同，需要的可能不同</span><span class="comment"># 我用的是清华大学的源：</span>deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="bullet">-   </span>配置好源之后执行 <span class="code">`apt-get update`</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-   </span>更新一下源信息</span><br><span class="line"></span><br><span class="line"><span class="bullet">-   </span>然后直接就可以安装了</span><br><span class="line"></span><br><span class="line"><span class="bullet">-   </span><span class="code">```</span>bash</span><br><span class="line"><span class="code">    apt-get install docker docker-compose -y</span></span><br></pre></td></tr></table></figure></code></pre></li><li><p>安装完了： <code>docker -v</code>  验证是否完成安装</p></li><li><p>成功之后启动 <em>docker</em> 服务: <code>/etc/init.d/docker start</code>  OR <code>service docker start</code></p></li><li><p>就可以启动docker服务了</p></li><li><p>如果想开机启动：<code>sudo update-rc.d  docker enable</code></p></li></ul><h2><span id="2-使用ustc的docker镜像">2. 使用ustc的docker镜像</span></h2><ul><li><p>这是镜像地址</p></li><li><p><a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/</a></p></li><li><p>配置docker镜像地址</p></li><li><pre><code class="bash">vim /etc/docker/daemon.json <span class="comment"># 打开的是一个新文件</span><span class="comment"># 写入：</span>{ <span class="string">"registry-mirrors"</span>: [<span class="string">"https://docker.mirrors.ustc.edu.cn"</span>] }<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-   保存退出即可</span><br><span class="line"></span><br><span class="line"><span class="meta">##  3. docker镜像管理相关命令</span></span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"><span class="meta">#查找镜像 </span></span><br><span class="line">docker search &lt;name&gt;</span><br><span class="line"><span class="meta">#下载镜像 </span></span><br><span class="line">docker pull &lt;name&gt;</span><br><span class="line"><span class="meta">#列出镜像 </span></span><br><span class="line">docker image ls | images</span><br><span class="line"><span class="meta">#删除镜像 </span></span><br><span class="line">docker image rm &lt;name&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ul><h2><span id="4-docker容器管理相关命令">4. docker容器管理相关命令</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行容器 </span></span><br><span class="line">docker run -it centos /bin/bash</span><br><span class="line"><span class="comment">#后台运行 </span></span><br><span class="line">docker run -dit centos /bin/bash</span><br><span class="line"><span class="comment">#列出容器 </span></span><br><span class="line">docker container ls 或者 docker ps</span><br><span class="line"><span class="comment">#终止容器 </span></span><br><span class="line">docker stop 852</span><br><span class="line"><span class="comment">##启动容器 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#进入容器 </span></span><br><span class="line">docker <span class="built_in">exec</span> -it 8529 bash</span><br><span class="line"><span class="comment">#导入导出 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除容器 d</span></span><br><span class="line">ocker container rm &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#kali安装docker&quot;&gt;kali安装Docker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-安装docker&quot;&gt;1. 安装Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-使用ustc的docker镜像&quot;&gt;2. 使用ustc的docker镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#4-docker容器管理相关命令&quot;&gt;4. docker容器管理相关命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
    
    </summary>
    
    
    
      <category term="Docker" scheme="https://atc96.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>javascript工具代码</title>
    <link href="https://atc96.top/JSCode/"/>
    <id>https://atc96.top/JSCode/</id>
    <published>2020-05-04T16:00:00.000Z</published>
    <updated>2020-05-09T13:56:52.480Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#javascript工具代码">javascript工具代码</a><ul><li><a href="#1-js面对对象写法">1. JS面对对象写法</a></li><li><a href="#2-下载文件到本地函数">2. 下载文件到本地函数</a></li><li><a href="#3-base64编码函数">3. base64编码函数</a></li><li><a href="#4-检查url函数">4. 检查url函数</a></li><li><a href="#5-检查url函数plus">5. 检查url函数plus</a></li><li><a href="#6-js读取本地文件">6. js读取本地文件</a></li><li><a href="#7-js读取文本防止乱码的实现">7. js读取文本防止乱码的实现</a></li><li><a href="#8-jquery实时监控输入框">8. jquery实时监控输入框</a></li><li><a href="#9-生成随机rgba颜色">9. 生成随机RGBA颜色</a></li><li><a href="#10格式化获得当前时间">10.格式化获得当前时间</a></li><li><a href="#11-左右滑动动画">11. 左右滑动动画</a></li><li><a href="#12-滚动条到指定位置滑动效果">12. 滚动条到指定位置滑动效果</a></li><li><a href="#13-滚动条监控">13. 滚动条监控</a></li><li><a href="#14-textarea输入tab的处理">14. textarea输入Tab的处理</a></li></ul></li></ul><!-- tocstop --><a id="more"></a><h1><span id="javascript工具代码">javascript工具代码</span></h1><h2><span id="1-js面对对象写法">1. JS面对对象写法</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">window</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//cardManager表示类名</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">cardManager</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> cardManager.prototype.init();</span><br><span class="line">    &#125;</span><br><span class="line">    cardManager.prototype = &#123;</span><br><span class="line">          <span class="keyword">constructor</span> : cardManager,</span><br><span class="line">          init : function () &#123;</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    cardManager.prototype.init.prototype = cardManager.prototype;</span><br><span class="line">    <span class="built_in">window</span>.cardManager = cardManager;</span><br><span class="line">&#125;)(<span class="built_in">window</span>);</span><br></pre></td></tr></table></figure><h2><span id="2-下载文件到本地函数">2. 下载文件到本地函数</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下载文件到本地</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params">filename, content</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> urlObject = <span class="built_in">window</span>.URL || <span class="built_in">window</span>.webkitURL || <span class="built_in">window</span>;    </span><br><span class="line">    <span class="keyword">var</span> downloadData = <span class="keyword">new</span> Blob([content]);  </span><br><span class="line">    <span class="keyword">var</span> save_link = <span class="built_in">document</span>.createElementNS(<span class="string">"http://www.w3.org/1999/xhtml"</span>, <span class="string">"a"</span>)   </span><br><span class="line">    save_link.href = rlObject.createObjectURL(downloadData);     </span><br><span class="line">    save_link.download = filename;  </span><br><span class="line">    <span class="keyword">var</span> ev = <span class="built_in">document</span>.createEvent(<span class="string">"MouseEvents"</span>);    </span><br><span class="line">    ev.initMouseEvent(<span class="string">"click"</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="built_in">window</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="number">0</span>, <span class="literal">null</span>);    </span><br><span class="line">    save_link.dispatchEvent(ev);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="3-base64编码函数">3. base64编码函数</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//b64编码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">base64Code</span>(<span class="params">str,isEncode=true</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//true编码 false解码</span></span><br><span class="line">  <span class="keyword">return</span> isEncode ? btoa(<span class="built_in">encodeURIComponent</span>(str)) : <span class="built_in">decodeURIComponent</span>(atob(str));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="4-检查url函数">4. 检查url函数</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_url</span>(<span class="params">_url</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> str=_url;</span><br><span class="line">    <span class="keyword">var</span> Expression=<span class="regexp">/http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w- .\/?%&amp;=]*)?/</span>;</span><br><span class="line">    <span class="keyword">var</span> objExp=<span class="keyword">new</span> <span class="built_in">RegExp</span>(Expression);</span><br><span class="line">    <span class="keyword">if</span>(objExp.test(str)==<span class="literal">true</span>)<span class="keyword">return</span> <span class="literal">true</span>;<span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="5-检查url函数plus">5. 检查url函数plus</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isURL</span>(<span class="params">str_url</span>) </span>&#123;<span class="comment">// 验证url</span></span><br><span class="line"><span class="keyword">var</span> strRegex = <span class="string">"^((https|http|ftp|rtsp|mms)?://)"</span></span><br><span class="line">+ <span class="string">"?(([0-9a-z_!~*'().&amp;=+$%-]+: )?[0-9a-z_!~*'().&amp;=+$%-]+@)?"</span> <span class="comment">// ftp的user@</span></span><br><span class="line">+ <span class="string">"(([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;"</span> <span class="comment">// IP形式的URL- 199.194.52.184</span></span><br><span class="line">+ <span class="string">"|"</span> <span class="comment">// 允许IP和DOMAIN（域名）</span></span><br><span class="line">+ <span class="string">"([0-9a-z_!~*'()-]+\.)*"</span> <span class="comment">// 域名- www.</span></span><br><span class="line">+ <span class="string">"([0-9a-z][0-9a-z-]&#123;0,61&#125;)?[0-9a-z]\."</span> <span class="comment">// 二级域名</span></span><br><span class="line">+ <span class="string">"[a-z]&#123;2,6&#125;)"</span> <span class="comment">// first level domain- .com or .museum</span></span><br><span class="line">+ <span class="string">"(:[0-9]&#123;1,4&#125;)?"</span> <span class="comment">// 端口- :80</span></span><br><span class="line">+ <span class="string">"((/?)|"</span> <span class="comment">// a slash isn't required if there is no file name</span></span><br><span class="line">+ <span class="string">"(/[0-9a-z_!~*'().;?:@&amp;=+$,%#-]+)+/?)$"</span>;</span><br><span class="line"><span class="keyword">var</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(strRegex);</span><br><span class="line"><span class="keyword">return</span> re.test(str_url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="6-js读取本地文件">6. js读取本地文件</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//js 读取文件</span></span><br><span class="line"><span class="comment">//files是一个input['type="file"']</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jsReadFiles</span>(<span class="params">files</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (files.length) &#123;</span><br><span class="line">        <span class="keyword">var</span> file = files[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();<span class="comment">//new一个FileReader实例</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="regexp">/text+/</span>.test(file.type)) &#123;<span class="comment">//判断文件类型，是不是text类型</span></span><br><span class="line">            reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">'body'</span>).append(<span class="string">'&lt;pre&gt;'</span> + <span class="keyword">this</span>.result + <span class="string">'&lt;/pre&gt;'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">             reader.readAsText(file);</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="regexp">/image+/</span>.test(file.type)) &#123;<span class="comment">//判断文件是不是imgage类型</span></span><br><span class="line">             reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                 $(<span class="string">'body'</span>).append(<span class="string">'&lt;img src="'</span> + <span class="keyword">this</span>.result + <span class="string">'"/&gt;'</span>);</span><br><span class="line">             &#125;</span><br><span class="line">             reader.readAsDataURL(file);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2><span id="7-js读取文本防止乱码的实现">7. js读取文本防止乱码的实现</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readFile</span>(<span class="params">file</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> reader,$body,type,arr,suffix;</span><br><span class="line">        reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">        $body = $(<span class="string">'body'</span>);</span><br><span class="line">        type = file.type;</span><br><span class="line">        arr = file.name.split(<span class="string">'.'</span>);</span><br><span class="line">        suffix = arr[arr.length <span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(type.indexOf(<span class="string">'text'</span>)!= <span class="number">-1</span> || suffix == <span class="string">'md'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            reader.readAsText(file);</span><br><span class="line">            reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">this</span>.result.indexOf(<span class="string">'�'</span>) != <span class="number">-1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">                    reader.readAsText(file,<span class="string">'gb2312'</span>);</span><br><span class="line">                    reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        $body.prop(<span class="string">'res'</span>,<span class="keyword">this</span>.result);</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> $body.prop(<span class="string">'res'</span>,<span class="keyword">this</span>.result);</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> suffix;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2><span id="8-jquery实时监控输入框">8. jquery实时监控输入框</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'body'</span>).on(<span class="string">'propetychange input'</span>, <span class="string">'输入框选择器'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//jscode...</span></span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h2><span id="9-生成随机rgba颜色">9. 生成随机RGBA颜色</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomRgbaColor</span>(<span class="params">a=<span class="number">1</span></span>) </span>&#123; <span class="comment">//a表示透明度 0~1 之间 随机可以传递函数[Math.random()]</span></span><br><span class="line">                <span class="keyword">var</span> r = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">                <span class="keyword">var</span> g = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">                <span class="keyword">var</span> b = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">`rgba(<span class="subst">$&#123;r&#125;</span>,<span class="subst">$&#123;g&#125;</span>,<span class="subst">$&#123;b&#125;</span>,<span class="subst">$&#123;a&#125;</span>)`</span>; <span class="comment">//返回rgba(r,g,b,a)格式颜色</span></span><br></pre></td></tr></table></figure><h2><span id="10格式化获得当前时间">10.格式化获得当前时间</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到当前时间并格式化</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCurrentTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">var</span> myDate,year,mon,date,h,m,s,week,weeks;</span><br><span class="line">       myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">       year = myDate.getFullYear(); <span class="comment">//获取当前年</span></span><br><span class="line">       mon = myDate.getMonth() + <span class="number">1</span>; <span class="comment">//获取当前月</span></span><br><span class="line">       date = myDate.getDate(); <span class="comment">//获取当前日</span></span><br><span class="line">       h = myDate.getHours();<span class="comment">//获取当前小时数(0-23)</span></span><br><span class="line">       m = myDate.getMinutes();<span class="comment">//获取当前分钟数(0-59)</span></span><br><span class="line">       s = myDate.getSeconds();<span class="comment">//获取当前秒</span></span><br><span class="line">       week = myDate.getDay(); <span class="comment">//获取当前星期</span></span><br><span class="line">       mon = toDouble(mon);</span><br><span class="line">       date = toDouble(date);</span><br><span class="line">       h = toDouble(h);</span><br><span class="line">       m= toDouble(m);</span><br><span class="line">       s = toDouble(s);</span><br><span class="line">       weeks = [<span class="string">"星期日"</span>, <span class="string">"星期一"</span>, <span class="string">"星期二"</span>, <span class="string">"星期三"</span>, <span class="string">"星期四"</span>, <span class="string">"星期五"</span>, <span class="string">"星期六"</span>];</span><br><span class="line">       <span class="keyword">return</span> (<span class="string">`<span class="subst">$&#123;year&#125;</span>-<span class="subst">$&#123;mon&#125;</span>-<span class="subst">$&#123;date&#125;</span> <span class="subst">$&#123;h&#125;</span>:<span class="subst">$&#123;m&#125;</span>:<span class="subst">$&#123;s&#125;</span> <span class="subst">$&#123;weeks[week]&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">toDouble</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> n &gt; <span class="number">9</span> ? n : <span class="string">'0'</span> + n;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2><span id="11-左右滑动动画">11. 左右滑动动画</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//左右滑动动画</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">slideAbout</span>(<span class="params">$jqObj,speed=<span class="number">300</span>,success=(e</span>)=&gt;</span>&#123;&#125;) &#123;</span><br><span class="line">    $jqObj.animate(&#123;<span class="attr">width</span>:<span class="string">'show'</span>&#125;,speed,<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        success(e);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="12-滚动条到指定位置滑动效果">12. 滚动条到指定位置滑动效果</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//滚动条到指定位置滑动效果</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scrollAnimate</span>(<span class="params">$container,$target,speed=<span class="number">300</span></span>)</span>&#123;</span><br><span class="line">    $container.animate(&#123;<span class="attr">scrollTop</span>: getPosition($target[<span class="number">0</span>]).top&#125;, speed);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取元素到文档区域的坐标</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">element</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> actualLeft = element.offsetLeft,</span><br><span class="line">            actualTop = element.offsetTop,</span><br><span class="line">            current = element.offsetParent; <span class="comment">// 取得元素的offsetParent</span></span><br><span class="line">        <span class="comment">// 一直循环直到根元素</span></span><br><span class="line">        <span class="keyword">while</span> (current !== <span class="literal">null</span>) &#123;</span><br><span class="line">            actualLeft += current.offsetLeft;</span><br><span class="line">            actualTop += current.offsetTop;</span><br><span class="line">            current = current.offsetParent;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回包含left、top坐标的对象</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            left: actualLeft,</span><br><span class="line">            top: actualTop</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="13-滚动条监控">13. 滚动条监控</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">windowEvent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// scrollEvent</span></span><br><span class="line">    $(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> dst = $(<span class="built_in">document</span>).scrollTop();</span><br><span class="line">        <span class="comment">//jscode...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="14-textarea输入tab的处理">14. textarea输入Tab的处理</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addTabEvent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"textarea"</span>).on(<span class="string">'keydown'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(e.keyCode === <span class="number">9</span>)&#123;</span><br><span class="line">                    e.preventDefault();</span><br><span class="line">                    <span class="keyword">let</span></span><br><span class="line">                        indent = <span class="string">'    '</span>, <span class="comment">//空格数可选</span></span><br><span class="line">                        start = <span class="keyword">this</span>.selectionStart,</span><br><span class="line">                        end = <span class="keyword">this</span>.selectionEnd,</span><br><span class="line">                        selected = <span class="built_in">window</span>.getSelection().toString();</span><br><span class="line">                    selected = indent + selected.replace(<span class="regexp">/\n/g</span>,<span class="string">'\n'</span>+indent);</span><br><span class="line">                    <span class="keyword">this</span>.value = <span class="keyword">this</span>.value.substring(<span class="number">0</span>,start) + selected + <span class="keyword">this</span>.value.substring(end);</span><br><span class="line">                    <span class="keyword">this</span>.setSelectionRange(start+indent.length,start+selected.length);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#javascript工具代码&quot;&gt;javascript工具代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-js面对对象写法&quot;&gt;1. JS面对对象写法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-下载文件到本地函数&quot;&gt;2. 下载文件到本地函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3-base64编码函数&quot;&gt;3. base64编码函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#4-检查url函数&quot;&gt;4. 检查url函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#5-检查url函数plus&quot;&gt;5. 检查url函数plus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#6-js读取本地文件&quot;&gt;6. js读取本地文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#7-js读取文本防止乱码的实现&quot;&gt;7. js读取文本防止乱码的实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#8-jquery实时监控输入框&quot;&gt;8. jquery实时监控输入框&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#9-生成随机rgba颜色&quot;&gt;9. 生成随机RGBA颜色&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#10格式化获得当前时间&quot;&gt;10.格式化获得当前时间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#11-左右滑动动画&quot;&gt;11. 左右滑动动画&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#12-滚动条到指定位置滑动效果&quot;&gt;12. 滚动条到指定位置滑动效果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#13-滚动条监控&quot;&gt;13. 滚动条监控&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#14-textarea输入tab的处理&quot;&gt;14. textarea输入Tab的处理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
    
    </summary>
    
    
    
      <category term="JS" scheme="https://atc96.top/tags/JS/"/>
    
  </entry>
  
</feed>
